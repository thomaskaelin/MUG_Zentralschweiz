using System.Collections.ObjectModel;
using System.Threading.Tasks;
using MUG_App.Common;
using Xamarin.Forms;

namespace MUG_App.Organizer
{
    public class OrganizerPageViewModel : ViewModelBase
    {
        private readonly IOrganizerLoaderService _loaderService;

        public OrganizerPageViewModel(IOrganizerLoaderService loaderService)
        {
            _loaderService = loaderService;
            Organizers = new ObservableCollection<Organizer>();
            RefreshDataCommand = new Command(async () => await RefreshData(), () => !IsBusy);
        }

        public ObservableCollection<Organizer> Organizers { get; }

        public Command RefreshDataCommand { get; }

        protected override void OnIsBusyChanged()
        {
            base.OnIsBusyChanged();

            RefreshDataCommand.ChangeCanExecute();
        }

        private async Task RefreshData()
        {
            IsBusy = true;
            await LoadOrganizers();
            IsBusy = false;
        }

        private async Task LoadOrganizers()
        {
            var loadedOrganizers = await _loaderService.LoadOrganizersAsync();

            Organizers.Clear();
<<<<<<< HEAD
            Organizers.Add(new Organizer {
                Name = $"Name: {loanaMember["name"].ToString()}",
                City = $"Wohnort: {loanaMember["city"].ToString()}",
                ImageUrl = loanaOrganizer["photo_link"].ToString() });
            Organizers.Add(new Organizer
            {
                Name = $"Name: {thomasMember["name"].ToString()}",
                City = $"Wohnort: {thomasMember["city"].ToString()}",
                ImageUrl = thomasOrganizer["photo_link"].ToString()
            });
=======
            foreach (var organizer in loadedOrganizers)
            {
                Organizers.Add(organizer);
            }
>>>>>>> 61e64652381c859faccdd8f3f1e775968caad572
        }
    }
}